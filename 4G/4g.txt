


――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――分割线――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

4G 生产工具update升级不成功

write squashfs to flash
/bin/sh: flashcp: not found



/usr/sbin # ls -l flashcp 
lrwxrwxrwx    1 root     root            17 Jan 29  2016 flashcp -> ../../bin/busybox
/usr/sbin # 
/usr/sbin # 



lrwxrwxrwx    1 root     root            17 Jan 29  2016 fakeidentd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 fbset -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 flash_eraseall -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 flash_lock -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 flash_unlock -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 flashcp -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 ftpd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 httpd -> ../../bin/busybox


/usr/sbin # fl
flash_eraseall  flash_lock      flash_unlock    flashcp         flock


/usr/sbin # which flashcp 
/usr/sbin/flashcp
/usr/sbin # 


/usr/sbin # 
/usr/sbin # which flashcp 
/usr/sbin/flashcp
/usr/sbin # ls ../bin/flock -l
lrwxrwxrwx    1 root     root            17 Jan 29  2016 ../bin/flock -> ../../bin/busybox
/usr/sbin # 





/usr
/usr # 
/usr # cd sbin/
/usr/sbin # 
/usr/sbin # 
/usr/sbin # ls -l
total 445
-rwxrwxrwx    1 root     root        261184 Apr 29  2014 pppd
-rwxrwxrwx    1 root     root         78984 Apr 29  2014 pppoe
-rwxrwxrwx    1 root     root          8959 Apr 29  2014 pppoe-connect
-rwxrwxrwx    1 root     root         26684 Apr 29  2014 pppoe-relay
-rwxrwxrwx    1 root     root         43464 Apr 29  2014 pppoe-server
-rwxrwxrwx    1 root     root          9603 Apr 29  2014 pppoe-setup
-rwxrwxrwx    1 root     root         14320 Apr 29  2014 pppoe-sniff
-rwxrwxrwx    1 root     root          5603 Apr 29  2014 pppoe-start
-rwxrwxrwx    1 root     root          2165 Apr 29  2014 pppoe-status
-rwxrwxrwx    1 root     root          2323 Apr 29  2014 pppoe-stop
/usr/sbin # 
/usr/sbin # 
/usr/sbin # 
/usr/sbin # flock 
flock: applet not found



/usr/sbin # ls -l
total 20
lrwxrwxrwx    1 root     root            17 Jan 29  2016 brctl -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 chpasswd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 chroot -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 crond -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 dhcprelay -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 dnsd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 fakeidentd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 fbset -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 flash_eraseall -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 flash_lock -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 flash_unlock -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 flashcp -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 ftpd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 httpd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 inetd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 loadfont -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 lpd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 nanddump -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 nandwrite -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 nbd-client -> ../../bin/busybox
-rwxrwxrwx    1 root     root           740 May 21  2008 nfsroot
lrwxrwxrwx    1 root     root            17 Jan 29  2016 ntpd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 popmaildir -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 rdate -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 rdev -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 readprofile -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 sendmail -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 setfont -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 setlogcons -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 svlogd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 telnetd -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 ubiattach -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 ubidetach -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 ubimkvol -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 ubirmvol -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 ubirsvol -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 ubiupdatevol -> ../../bin/busybox
lrwxrwxrwx    1 root     root            17 Jan 29  2016 udhcpd -> ../../bin/busybox



/usr/sbin # 
/usr/sbin # fl
flash_eraseall  flash_lock      flash_unlock    flashcp         flock
/usr/sbin # fl
flash_eraseall  flash_lock      flash_unlock    flashcp         flock
/usr/sbin # fl





――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――分割线――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

增加vbus硬件接线后，reboot重启仍然可以ping通baidu 114
2次断开网线，连上网线，4G都仍然能ping 通baidu 114，显示正常。不过也碰到过什么都ping不通的情况



重启问题
我之前尝试过rmmod这些模块，qmi_wwan和qcserial成功卸载了，但option，usb_wwan，usbserial

//		ret = system("udhcpc -i eth0 -t 10 -n -s /etc/udhcpc.script");
		ret = system("/sbin/udhcpc -i eth0 -t 10 -n -s /etc/udhcpc.script");



网页 mobile block  src/web

要及时报警,不要过滤很长时间,改为 5  motion_detect.c #define ALARM_MAX_SEC 5 // 60




GobiNet
ethX
/dev/qcqmiX



[err]
QMI WWAN
wwanX
/dev/cdc-wdmX
~ # ifconfig wwan0
ifconfig: wwan0: error fetching interface information: Device not found
~ # 
~ # 


~ # lsusb 
Bus 001 Device 001: ID 1d6b:0002
Bus 002 Device 001: ID 1d6b:0001



carl@carl-OptiPlex-7010:~$ ls /sys/bus/usb/drivers
cdc_acm cdc_wdm ftdi_sio GobiNet hub option qmi_wwan usb usbfs usbhid usbserial
usbserial_generic

If USB serial driver is required, please make sure "option" exists. If CDC ACM driver is required, please
make sure "cdc_acm" exists. If GobiNet driver is required, please make sure "GobiNet" exists. If QMI
WWAN driver is required, please make sure "qmi_wwan" exists.


read from /dev/ttyUSB2 ERRORsetattr: Inappropriate ioctl for device
,337
set new gateway error ! errno=17
REOPEN_TTY: reopeOR !!!


~ # ls /dev/ttyUSB*
/dev/ttyUSB2


~ # ls /sys/bus/usb/drivers
cdc_wdm      hub          option       qmi_wwan     usb          usb-storage  usbfs        usbhid       usbserial
~ # 



[success]
~ # ls /sys/bus/usb/drivers
cdc_wdm      option       usb          usbfs        usbserial
hub          qmi_wwan     usb-storage  usbhid
~ # 

~ # ls /dev/ttyUSB
ttyUSB0  ttyUSB1  ttyUSB2  ttyUSB3

~ # lsusb 
Bus 001 Device 002: ID 2c7c:0125
Bus 001 Device 001: ID 1d6b:0002
Bus 002 Device 001: ID 1d6b:0001
~ # 
~ # 

~ # ls /dev/cdc-wdm0 
/dev/cdc-wdm0


DHCP

模块化 打包进去
看reboot复位后还有没有问题



――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――分割线――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

【重要】
原来4G时手机访问，根本不需要域名支持，只需网络通就行，比如连ip地址能通就行
所以折腾好久的解决问题实现ping baidu都没多大实用意义了


mount -t nfs -o nolock 10.0.39.221:/home/wigewige/ /mnt/nfs
cd /mnt/share/develop/project/4G/APP/
cp hiapp /mnt/flash/
cd /mnt/flash/
killall hiapp ;./hiapp &



――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――分割线――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

归结为两个问题:
1 ping 114 8.8通,但ping不通baidu 163           手动改/etc/resolve为114可以ping通baidu了
2 ping 114 8.8不通,ping baidu 163也不通        代码中改为114,结果114也ping不通了,但第一次一定成功,第二次一定失败ping不通.有时候第二次连上时也ping通baidu了.
有个规律,如果连上网线,没去ping任何网络,那断开网络后baidu,114等大概率都能ping通,但不是每次都成功,注意到有一次失败,连上网线时什么也没ping,但断开网线时就是ping不通.
如果连上网络,去ping了baidu或114,那么断开网络后,baidu,114等都不能ping通.
baidu,163,114,8.8都是要么一起能ping通,要么一起不能ping通,好像与硬件又没关系了.
连上网线时ifconfig,ps操作对断开网线后ping不ping的通,无影响.目前看来只有ping能影响到它mobile时连网情况.
不知为什么,其他如baidu,163,8.8都能ping通时,114有时会特别些,ping不通.难道跟它是域名dns有一定关系?





【重要】
找到ping通114,但ping不通baidu的问题了
原来是queutel申请得到的域名不稳定
解决办法是mobile时也用有限配的域名


已经是cmnet，插移动4G卡测，发现
现在发现又是第三次连4G才会出问题，只有8.8.8.8可以ping通，baidu 114  163都不通。自动获得的域名是
~ # cat /etc/resolv.conf
nameserver 221.179.38.7
nameserver 120.196.165.7
~ # 


重新又插拔了次，又奇怪的事，能通114，也能通8.8.8.8，但又不能通163和baidu这些域名的网站


又可以了，用cmnet也可以第二次ping通www.baidu.com   www.163.com  8.8.8.8  但就是ping不同114.114.114.114
114也不保险





移动卡是第二次失败，联通卡用cmnet也是第二次ping baidu失败。


果然，网络也不通了，114都不通，打印说连上了。


【重要】
终于知道之前手动连接时为什么会做成延时sleep(10) 10秒了
对比插拔时移动卡可以连上，手动点击时连不上，对比出来，发现了等待的延时不同这点差异
被我改成延时1s后，连移动卡时因为连接上网了慢，马上又被kill重连，所以一直连不上，联通因为连接快，没出问题
解决办法是多等一会，至多10s




【重要】
第二次时断开网线，ping 114也不通，可能是没有使用对应的-s cmnet -s 3gnet，而是用了通用的或不对应的连导致。
后来改为对应移动和联通的-s之后，基本第二次把网线，第三次拔网线都能ping通114

移动卡，
增加延时机制逻辑后，现在手动连很正常了，但插拔网线会ping不通www.baidu.com，情况
联通也有这情况，但ping 114确实正常能ping通的。就是ping 域名不成功。
是手动连成功后，断开还可以连上，再断开网线连上时，这第二次连就失败
连ping 114.114.114.114也不通了。连4G网络都连不上了。





~ # 
~ # ifconfig wwan0
ifconfig: wwan0: error fetching interface information: Device not found
~ # 

需要断电上电重启，才能检测到wwan0模块，比如烧写后，因为硬件没有复位。




――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――分割线――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

NTP  202.120.2.101
ntp.sjtu.edu.cn 202.120.2.101 (上海交通大学网络中心NTP服务器地址）
https://www.douban.com/note/171309770/





――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――分割线――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――


基本的起来后，就先实现各种功能完成需要，先直观感受得到的需要，接着非直观感受不到的需要，再处理问题解决问题

【功能】
【1】测试时网络信号查看显示功能
【2】根据网络信号强度自动调整码率帧率分辨率
【3】问题
【4】我自己定的需求，如支持多个运营商，自动切换制式




网页上设置DNS，改的是/etc/resolv.conf，/tmp/resolv.conf没有更改
重启后/tmp/resolv.conf跟着改变了，很可能/tmp/resolv.conf是从/etc/resolv.conf来的，然后把/etc/resolv.conf删了。这样就好，是我想要的效果。



现在是稳定连上了，连上网络时间需要比较长，可能有5s左右，ping通baidu



quectel-CM 这个工具不稳定，有时拔掉网线走4G模块，ping不通，连114也ping不通，那就不是域名的问题了，但ping 8.8.8.8是可以ping 通，不知是不是模块的问题了。不过有时确实是ping 114通，ping baidu不通
工作正常时能ping通114和baidu，却ping不通8.8.8.8


4G这个功能
第一，把Mobile模块运作起来，先打通，再把每个网页可配置功能做对

第二，解决问题

第三，码率控制

第四，各种卡，各种制式可切换等，


Thread_WebServer
HandleClientRequest
FunSetMobileCfg SET_MOBILE_CFG
		case 0:
			Ipv4Manage_Set_Mobile_Enable_API(ptr->moduleEnable);
			break;

		case 1:
			Ipv4Manage_Set_Mobile_Model_API(ptr->netmodeSwitch);
			break;

		case 2:
			Ipv4Manage_Set_Mobile_Connect_API(1);
			break;

		case 3:
			Ipv4Manage_Set_Mobile_Connect_API(0);
			break;

Fun_Mobile_Set_Enable_API




web -- webserver -- app
显示     status
走通


main  -  mobile_module_start  - mobile_module_start - Mobile_Response_Analysis



Thread_WebServer  -   HandleClientRequest  -    case SET_MOBILE_CFG: FunSetMobileCfg    -     Ipv4Manage_Set_Mobile_Enable_API  Ipv4Manage_Set_Mobile_Model_API Ipv4Manage_Set_Mobile_Connect_API

hank_mobile.c
hank_net_params_API.c
webserver.c


HandleClientRequest
                    FunSetMobileCfg
                                        FunSetMobileCfg
                                                          Fun_Mobile_Connect_API
                                                                                  Mobile_Connect



必须把Mobile开起来


		system("cp /etc/resolv.conf /etc/resolv.conf.bak ; cp /tmp/resolv.conf /etc/");

    	system("cp /etc/resolv.conf.bak /etc/resolv.conf");
	Ipv4Manage_Get_Gateway_API( 0, (UINT32 *)&gw );
	hank_Gateway_Config( gw );
  
  
  
MobileParaCfg

network.asp   -     netCfg.c   -    webserver.c   -           

webs  -  HandleClientRequest webserver thread recv and deal with   -    Mobile_Response_Analysis mobile AT thread recv

action="/form/MobileSet"  ---	websFormDefine(T("MobileSet"),MobileParaCfg);  -  MobileParaCfg PassCfg send   -     HandleClientRequest  recv case SET_MOBILE_CFG: FunSetMobileCfg( &mobile_local);  - case 2: Ipv4Manage_Set_Mobile_Connect_API   Fun_Mobile_Connect_API  Mobile_Connect  Mobile_CMD_Send write AT & system("/mnt/flash/Server/tools/quectel-CM -s 3gnet &");


域名改好，10s延时缩短为1s





【问题】
连上网线后，有线DNS没有更新导致有线时连不通外网的问题，域名恢复有线 ――  恢复了，就ping通外网baidu了，解决了
移入内核中后会概率系统崩溃的问题
有线网络没连上也会Link up，导致断开4G，又重连4G――把  ――  把周期性复位PHY关掉后不再出现，经常复位PHY会引起网络状态误判，解决了
Mobile_Response_Analysis中代码查询注册信息可能有问题


【功能】
【】关于2G/3G/4G自动切换
答：移动联通，模块会自动切，不用我触发切换，电信需要我做处理，那该怎么处理？
首先就是通过什么方式来切换制式，4G到3G/2G，2G/3G到4G，怎么判断切好了。
刚才说4G/3G/2G制式自动切换，根据你们解答，我的理解是移动和联通，你们的模块会自动切好，不用我去触发切换制式，而电信需要我做下处理，这样理解对吗？

ok，明白了。那就只需要对电信卡做处理了，那应该怎么处理？
1、我通过什么方式去切换制式，比如4G到3G，如果发现3G还不行，切到2G；以及2G/3G又切回到4G
2、通过什么方式分别监测4G、3G、2G信号
这部分自动切换你们是怎么实现的？


【】不同运营商区别对待和方案
1/发AT 查询运营商


【】关于根据信号强弱自动调整策略和方案    自动根据信号强弱调整策略
1/时刻发AT 查询CSQ值   
如小于一定值，表明没有网络信号，报警提醒网络无信号断网
大于一定值时，根据监测到的不同值测试不同速率，调整视频数据量
4G/3G/2G切换，保证有网络，一切手段

【】4G时网络是否时刻联通功能和方案
判断联网机制原理，掉网监测
工具quectel自身如果不正常工作，上不了网，也要重新断开再重新连，直至连上，除非多次都失败
判断4G连接是否成功联通外网标志？


【】不同运营商不同处理
1、使用工具quectel
还得根据运营商选择 3gnet等



公网APN
移动：cmnet
联通：3gnet
电信：ctnet
电信2G 3G或其他专网需要设用户名 密码


上海域格 19:49:47 
公网APN
移动：cmnet
联通：3gnet
电信：ctnet
张炜 19:50:04 
ok
张炜 19:50:31 
这三步都是必须要操作一遍的是吧
上海域格 19:50:46 
不是的
上海域格 19:51:04 
电信2G 3G或其他专网需要设用户名 密码
上海域格 19:51:10 
其他网络不需要
张炜 19:51:16 
ok
张炜 19:51:58 
也就是说,如果插了电信卡,就做这条 AT^NETCFG=0,32774,,,4,,,"",0,"CARD","CARD",1
上海域格 19:53:12 
是电信2G 3G
4G不需要
张炜 19:53:14 
,如果插了电信卡2G/3G,就只用执行这条 AT^NETCFG=0,32774,,,4,,,"",0,"CARD","CARD",1
如果是别的卡,就不需执行AT^NETCFG=0,32774,,,4,,,"",0,"CARD","CARD",1,但需要设APN
张炜 19:54:24 
好,我明白了,AT^NETCFG=0,32774,,,4,,,"",0,"CARD","CARD",1只针对电信2G/3G
上海域格 19:54:51 
是的，公网是这样的
张炜 19:55:16 
那APN呢,不管是电信2G/3G,还是别的卡,一律都要执行AT+CGDCONT=1,"IP"," APN吗
上海域格 19:56:44 
是的，具体APN根据卡的情况匹配一下
张炜 19:57:14 
好,所有卡都执行设置APN






            
            

            
            
            
            
            
            
            
            
            
            
            
            
            



――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――分割线――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

QMI WWAN


cd /tmp
tftp -g -r quectel-CM 10.0.39.226
tftp -g -r udhcpc 10.0.39.226
tftp -g -r default.script 10.0.39.226

chmod 777 udhcpc
chmod 777 default.script
chmod 777 quectel-CM


./quectel-CM -s 3gnet &


-------------------------------------------------------------------------

tftp -g -r qcserial.ko 10.0.39.226

insmod qcserial.ko

ifconfig wwan0 up

./quectel-CM



          
查询系统信息
echo -en "AT^sysinfo\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
AT^sysinfo
^SYSINFO: 2,3,0,9,1


查询网络信号强度
echo -en "AT+csq\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
+CSQ: 27,99

OK

echo -en "AT+csq\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
+CSQ: 25,0


检测卡在不在
echo -en "AT+cpin?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
+CPIN: READY

                              
查SIM卡信息
echo -en "AT+cimi\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
460013854210850
          
~ # echo -en "AT+cimi\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
 obile_CMD_Recv: AT+cimi
Mobile_CMD_Recv: 
460000950340312

OK
 
~ # 
~ # 
          
          

查卡注册状态
echo -en "AT+cgreg?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
+CGREG: 0,1


echo -en "AT+COPS?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2

查询卡所属运营商
echo -en "AT+cops?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
+COPS: 0,0,"CHN-UNICOM",7

~ # echo -en "AT+cops?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
 obile_CMD_Recv: AT+cops?
Mobile_CMD_Recv: 
+COPS: 0,0,"CHINA MOBILE",0               // 0是因为当时没接天线 

OK
 
~ # 

~ # echo -en "AT+cops?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
 obile_CMD_Recv: AT+cops?
Mobile_CMD_Recv: 
+COPS: 0,0,"CHINA MOBILE",7

OK
 
~ # 
~ # 





读取当前注册网络制式状态：^SYSINFO
echo -en "AT^SYSINFO\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2

~ # echo -en "AT^SYSINFO\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
 obile_CMD_Recv: AT^SYSINFO
Mobile_CMD_Recv: 
^SYSINFO: 2,3,0,9,1

OK
 
~ # 


/etc # echo -en "AT^SYSINFO\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
 obile_CMD_Recv: AT^SYSINFO
Mobile_CMD_Recv: 
^SYSINFO: 1,0,1,5,255

OK

3G

~ # echo -en "AT^SYSINFO\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
 obile_CMD_Recv: AT^SYSINFO
Mobile_CMD_Recv: 
^SYSINFO: 2,3,0,9,1

OK
 
 
软件复位模块

echo -en "AT+CFUN=?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2

  # Mobile_CMD_Recv: AT+CFUN=?
Mobile_CMD_Recv: 
+CFUN: (0,1,4),(0,1)

OK


echo -en "AT+QPOWD=?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2

echo -en "AT+QPOWD=0\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2

echo -en "AT+CFUN?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
~ # echo -en "AT+CFUN?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
 obile_CMD_Recv: AT+CFUN?
Mobile_CMD_Recv: 
+CFUN: 1

OK


AT命令不区分大小写

echo -en "AT+cfun?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2 
echo -en "at+cfun?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2


~ # 
~ # echo -en "AT+CFUN?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
 obile_CMD_Recv: AT+CFUN?
Mobile_CMD_Recv: 
+CFUN: 1

OK
 
~ # 
~ # echo -en "AT+cfun?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
Mobile_CMD_Recv: AT+cfun?
+CFUN: 1

OK
 
~ # 
~ # 
~ # echo -en "at+cfun?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
Mobile_CMD_Recv: at+cfun?
+CFUN: 1

OK
 
~ # 




echo -en "AT+CFUN=1,1\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2

echo -en "AT+CFUN=1,1\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2;reboot

~ # echo -en "AT+CFUN=1,1\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
Mobile_CMD_Recv: AT+CFUN=1,1
OK
 
~ # 


~ # 
~ # 
~ # echo -en "AT+CFUN=1,1\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
Mobile_CMD_Recv: AT+CFUN=1,1
OK
 
~ # 
~ # lsmod usb 1-1: USB disconnect, device number 2
option1 ttyUSB0: GSM modem (1-port) converter now disconnected from ttyUSB0
option 1-1:1.0: device disconnected
option: option_instat_callback: error -108
option1 ttyUSB1: GSM modem (1-port) converter now disconnected from ttyUSB1
option 1-1:1.1: device disconnected
option: option_instat_callback: error -108
read from /dev/ttyUSB2 ERROR !!!
option1 ttyUSB2: GSM modem (1-port) converter now disconnected from ttyUSB2
option 1-1:1.2: device disconnected
option: option_instat_callback: error -108
option1 ttyUSB3: GSM modem (1-port) converter now disconnected from ttyUSB3
wigewige Mobile_Reset,361
REOPEN_TTY: open /dev/ttoption 1-1:1.3: device disconnected
yUSB2 ERROR !!!
qmi_wwan 1-1:1.4: wwan0: unregister 'qmi_wwan' usb-hiusb-ehci-1, Qualcomm WWAN/QMI device



          
          
          
echo -en "AT+CGDCONT=1,\"IP\",\"3gnet\"\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2 
echo -en "AT\$QCRMCALL=1,1,1,2,1\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
echo -en "AT\$QCRMCALL?\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2
//echo -en "AT\$QCRMCALL=0,1\r\n" > /dev/ttyUSB2; cat /dev/ttyUSB2



10、查询当前信号强度：+CSQ 
描述 查询接收信号强度<rssi>和信道位错误率<ber>  格式 AT+CSQ<CR>  返回值  <CR><LF>+CSQ: <signal>,<ber> <CR><LF>OK
<CR><LF>  
参数说明  <rssi>  
以下为signal（CSQ）与rssi对应关系：
  signal rssi
    0 <4或99 <-107 dBm or unknown 
    1 <10 <-93dBm 
    2 <16 <-71 dBm 
    3 <22 <-69dBm 
    4 <28 <-57dBm 
    5 >=28  >=-57 dBm  
    <ber> 99  误码率无法测量  
示例  AT+CSQ  
    +CSQ: 20,99 
    OK  
    查询接收信号强度  
    注意事项 
    公式：RSSI(dBm) = -113 + 2CSQ. 



――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――分割线――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

PPP

tftp -g -r chat 10.0.39.226
tftp -g -r pppd 10.0.39.226
tftp -g -r lte-connect-chat 10.0.39.226
tftp -g -r yuge-lte 10.0.39.226

/tmp # echo "AT+CGDCONT=1,\"IP\",\"3gnet\"" > /dev/ttyUSB1 ;cat /dev/ttyUSB1 


/tmp # /tmp/pppd call yuge-lte &

                      
/tmp # ifconfig eth0 down 


/tmp # ping www.baidu.com

   
/tmp # killall pppd



lsusb
ls /dev/ttyUSB*




#download ppp-2.4.5.tar.gz from https://download.samba.org/pub/ppp/

#decompress

./configure

make CC=arm-hisiv300-linux-gcc

make ARCH=arm CROSS_COMPILE=arm-hisiv300-linux- menuconfig

#Device Drivers -> Network device support  -> <*> PPP (point-to-point protocol)中，选中所有ppp选项：

make ARCH=arm CROSS_COMPILE=arm-hisiv300-linux- uImage

#burn uImage in uboot through tftp server

#cp chat pppd to target board
cp /mnt/nfs/share/develop/source-code/ppp-2.4.5/pppd ./


Reference
http://blog.sina.com.cn/s/blog_80435476010146n8.html
http://blog.csdn.net/lanyou1900/article/details/40185259
http://zhuqingcode.github.io/linux/2013/12/31/ppp-244.html
                                                   


――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――分割线――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

GobiNet

mount -t nfs -o nolock 10.0.39.227:/home/wigewige /mnt/nfs/
cp /mnt/nfs/share/develop/Hi3518E_SDK_V1.0.3.0/osdrv/opensource/kernel/linux-3.4.y/drivers/net/mii.ko  /tmp/
cp /mnt/nfs/share/develop/Hi3518E_SDK_V1.0.3.0/osdrv/opensource/kernel/linux-3.4.y/drivers/net/usb/usbnet.ko  /tmp/
cp /mnt/nfs/share/develop/Hi3518E_SDK_V1.0.3.0/osdrv/opensource/kernel/linux-3.4.y/drivers/net/usb/GobiNet/GobiNet.ko   /tmp/


cd /tmp
tftp -g -r mii.ko 10.0.39.226
tftp -g -r GobiNet.ko 10.0.39.226
tftp -g -r usbnet.ko 10.0.39.226
tftp -g -r udhcpc 10.0.39.226
tftp -g -r default.script 10.0.39.226
chmod 777 udhcpc
chmod 777 default.script


insmod mii.ko 
insmod usbnet.ko 
insmod GobiNet.ko 



echo -en "AT+CGDCONT=1,\"IP\",\"3gnet\"\r\n" > /dev/ttyUSB1; cat /dev/ttyUSB1 
echo -en "AT\$QCRMCALL=1,1,1,2,1\r\n" > /dev/ttyUSB1; cat /dev/ttyUSB1
echo -en "AT\$QCRMCALL?\r\n" > /dev/ttyUSB1; cat /dev/ttyUSB1 
//echo -en "AT\$QCRMCALL=0,1\r\n" > /dev/ttyUSB1; cat /dev/ttyUSB1



ifconfig usb0 up
ifconfig usb0
./udhcpc -i usb0
//udhcpc -i usb0


ping 114.114.114.114
ping www.baidu.com
ping www.163.com



/tmp # ./udhcpc -i usb0
udhcp client (v0.9.8) started
Sending discover...
Sending select for 10.77.211.214...
Lease of 10.77.211.214 obtained, lease time 7200
deleting routers
route: SIOCDELRT: No such process
adding dns 120.80.80.80
adding dns 221.5.88.88
/tmp # ifconfig 


usb0      Link encap:Ethernet  HWaddr 3E:30:CB:64:02:14  
          inet addr:10.65.45.142  Bcast:10.65.45.143  Mask:255.255.255.252
          UP BROADCAST RUNNING NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:8 errors:0 dropped:0 overruns:0 frame:0
          TX packets:8 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:2448 (2.3 KiB)  TX bytes:3560 (3.4 KiB)


Reference
http://fanli7.net/a/bianchengyuyan/C__/20120903/216515.html
http://www.cppblog.com/cokecoffe/archive/2011/07/19/151425.html